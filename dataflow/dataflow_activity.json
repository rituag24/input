{
	"name": "dataflow_activity",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "source1_dataflow",
						"type": "DatasetReference"
					},
					"name": "source1"
				},
				{
					"dataset": {
						"referenceName": "source2_data_flow",
						"type": "DatasetReference"
					},
					"name": "source2"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "datasink_blob_dataflow",
						"type": "DatasetReference"
					},
					"name": "joineddata"
				}
			],
			"transformations": [
				{
					"name": "joined"
				}
			],
			"scriptLines": [
				"source(output(",
				"          Employee_id as string,",
				"          First_Name as string,",
				"          Last_Name as string,",
				"          Gender as string,",
				"          Salary as string,",
				"          Date_of_Birth as string,",
				"          Age as string,",
				"          Country as string,",
				"          Department_id as string,",
				"          Date_of_Joining as string,",
				"          Manager_id as string,",
				"          Currency as string,",
				"          End_Date as string",
				"     ),",
				"     allowSchemaDrift: false,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> source1",
				"source(output(",
				"          Employee_id as string,",
				"          job_details as string",
				"     ),",
				"     allowSchemaDrift: false,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> source2",
				"source1, source2 join(source1@Employee_id == source2@Employee_id,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> joined",
				"joined sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     partitionFileNames:['joineddata.csv'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> joineddata"
			]
		}
	}
}